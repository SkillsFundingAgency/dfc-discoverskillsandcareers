resources:
 repositories:
 - repository: self

jobs:
- job: BuildArtefacts
  displayName: 'Build Artefacts'
  pool: 
   name: NCS - CI and CD
   demands: 
   - npm
   - node.js

  steps:

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: tests'
    inputs:
     pathtoPublish: src/Dfc.DiscoverSkillsAndCareers.WebApp/
     artifactName: tests
     publishLocation: container

  - task: MSBuild@1
    displayName: 'Build Change feed dacpac'
    inputs:
      solution: 'src/changefeed/Dfc.DiscoverSkillsAndCareers.ChangedFeed.Db/Dfc.DiscoverSkillsAndCareers.ChangedFeed.Db.sqlproj' 
      configuration: 'Release'
      platform: 'x86'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Changefeed DB'
    inputs:
        pathtoPublish: src/changefeed/Dfc.DiscoverSkillsAndCareers.ChangedFeed.Db/bin/Output
        artifactName: changefeeddb
        publishLocation: container

  - task: DotNetCoreInstaller@0
    displayName: 'Use .NET Core sdk 2.2.102'
    inputs:
     version: 2.2.102

  - task: Npm@1
    displayName: 'npm install'
    inputs:
     workingDir: src/Dfc.DiscoverSkillsAndCareers.WebApp/
     verbose: false
    env:
      NODE_ENV: production

  - task: Gulp@0
    displayName: 'gulp prod'
    inputs:
     gulpFile: src/Dfc.DiscoverSkillsAndCareers.WebApp/Gulpfile.js
     targets: prod

  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      arguments: '--configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude="%2c[xunit.*]*%2c[Dfc.DiscoverSkillsAndCareers.SupportApp]*%2c[Dfc.DiscoverSkillsAndCareers.WebApp.Views]*%2c[microsoft.*]*%2c[system.*]*"'
      projects: 'src\Dfc.DiscoverSkillsAndCareers.UnitTests\Dfc.DiscoverSkillsAndCareers.UnitTests.csproj'

  # Generate the report using ReportGenerator (https://github.com/danielpalme/ReportGenerator)
  # First install the tool on the machine, then run it
  - script: |
      dotnet tool install -g dotnet-reportgenerator-globaltool
      reportgenerator -reports:$(Build.SourcesDirectory)/src/Dfc.DiscoverSkillsAndCareers.UnitTests/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
    displayName: Create Code coverage report

  # Publish the code coverage result (summary and web site)
  # The summary allows to view the coverage percentage in the summary tab
  # The web site allows to view which lines are covered directly in Azure Pipeline
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
      reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet publish web app'
    inputs:
     command: publish
     publishWebProjects: true
     projects: 'src\Dfc.DiscoverSkillsAndCareers.WebApp\Dfc.DiscoverSkillsAndCareers.WebApp.csproj'
     arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)\webapp'
     zipAfterPublish: true
     modifyOutputPath: false

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: webapp'
    inputs:
     pathtoPublish: $(build.artifactstagingdirectory)/webapp
     artifactName: webapp
     publishLocation: container

  - task: DotNetCoreCLI@2
    displayName: 'dotnet publish function apps'
    inputs:
     command: publish
     publishWebProjects: false
     projects: 'src/FunctionApps/**/*.csproj'
     arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/functionapps'
     zipAfterPublish: true
     modifyOutputPath: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: functionapps'
    inputs:
     pathtoPublish: $(build.artifactstagingdirectory)/functionapps
     artifactName: functionapps
     publishLocation: container

  - task: DotNetCoreCLI@2
    displayName: 'dotnet publish support app'
    inputs:
     command: publish
     publishWebProjects: false
     projects: 'src/support/**/*.csproj'
     arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/supportapp'
     zipAfterPublish: false
     modifyOutputPath: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: supportapp'
    inputs:
     pathtoPublish: $(build.artifactstagingdirectory)/supportapp
     artifactName: supportapp
     publishLocation: container

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)/Azure'
    inputs:
     sourceFolder: 'Resources'
     contents: '**'
     targetFolder: '$(build.artifactstagingdirectory)/Azure'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: azuretemplates'
    inputs:
     pathtoPublish: $(build.artifactstagingdirectory)/Azure
     artifactName: azuretemplates
     publishLocation: container

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)/Data'
    inputs:
     sourceFolder: 'data'
     contents: '**'
     targetFolder: '$(build.artifactstagingdirectory)/Data'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: data'
    inputs:
     pathtoPublish: $(build.artifactstagingdirectory)/Data
     artifactName: data
     publishLocation: container
